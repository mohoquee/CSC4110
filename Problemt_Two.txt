# Revision number 02/08/2024
## Begin Pirate Game of Chance 
### Student: Mohammad Hoque

import random

MAX_WAGER = 20
INITIAL_BANK_BALANCE = 50

# Function to simulate spinning the wheel and updating the game state
def spin_wheel(treasure_chest, bank_account, wager):
    spin_result = random.choice(['win', 'lose'])

    if spin_result == 'win':
        # Player won the spin
        print("Congratulations! You won the spin!")
        bank_account += wager * 2
        treasure_chest = update_treasure_chest(treasure_chest)
    else:
        # Player lost the spin
        print("Sorry, you lost the spin.")
        bank_account -= wager

    return treasure_chest, bank_account

# Function to update the treasure chest with random quantities of items
def update_treasure_chest(treasure_chest):
    for item in treasure_chest:
        quantity = random.randint(0, 5)
        treasure_chest[item] += quantity
        print(f"Added {quantity} {item} to the treasure chest.")
    return treasure_chest

# Function to display the current game state
def display_game_state(treasure_chest, bank_account):
    print("\n--- Pirate's Game of Chance ---")
    print(f"Treasure Chest: {treasure_chest}")
    print(f"Bank account balance: ${bank_account}")

# Function to display available options to the player
def display_options(bank_account):
    max_wager = min(bank_account, MAX_WAGER)
    print("\nOptions:")
    print("1. Spin the wheel")
    print("2. Quit")
    print(f"Available Wager Amount: $1 to ${max_wager}")

# Function to get user input with validation
def get_user_input(prompt, valid_range=None):
    while True:
        try:
            user_input = int(input(prompt))
            if valid_range is None or (isinstance(user_input, int) and 1 <= user_input <= valid_range):
                return user_input
            else:
                print("Invalid input. Please enter a valid number within the specified range.")
        except ValueError:
            print("Invalid input. Please enter a valid number.")

# Main game loop
def play_game():
    treasure_chest = {
        'gold_coins': 100,
        'diamonds': 10,
        'rum_barrels': 20,
        'swords': 5
    }
    bank_account = INITIAL_BANK_BALANCE

    while bank_account > 0:
        display_game_state(treasure_chest, bank_account)
        display_options(bank_account)
        choice = get_user_input("Enter your choice (1 or 2): ", valid_range=2)

        if choice == 1:
            max_wager = min(bank_account, MAX_WAGER)
            wager = get_user_input(f"Enter your wager (1 to {max_wager}): ", valid_range=max_wager)
            if wager > bank_account:
                print("Insufficient funds. Please enter a valid wager.")
                continue
            treasure_chest, bank_account = spin_wheel(treasure_chest, bank_account, wager)
        elif choice == 2:
            print("Thanks for playing! See you again.")
            break

    print("Game over!")

# Main execution
if __name__ == "__main__":
    play_game()

# 02/15/2024
## End Pirate Game of Chance 
# Mohammad Hoque
